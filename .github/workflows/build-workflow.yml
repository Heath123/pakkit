name: Build pakkit

on: push

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install Wine
      run: sudo apt-get update && sudo apt-get install wine64 fonts-wine- gstreamer1.0-plugins-base- gstreamer1.0-plugins-good- gstreamer1.0-x- i965-va-driver- intel-media-va-driver- libaa1- libaom0- libasound2-plugins- libasyncns0- libavc1394-0- libavcodec58- libavutil56- libcaca0- libcapi20-3- libcdparanoia0- libcodec2-0.9- libdv4- libfaudio0- libflac8- libglu1-mesa- libgphoto2-6- libgphoto2-l10n- libgphoto2-port12- libgsm- - libgstreamer-plugins-base1.0-0- libgstreamer-plugins-good1.0-0- libiec61883-0- libieee1284-3- libigdgmm11- libjack-jackd2-0- libmp3lame0- libmpg123-0- libopenal-data- libopenal1- libopenjp2-7- libopus0- liborc-0.4-0- libosmesa6- libpulse0- libraw1394-11- libsamplerate0- libsane- libsane-common- libsdl2-2.0-0- libshine3- libshout3- libsndfile1- libsndio7.0- libsoxr0- libspeex1- libstb0- libswresample3- libtag1v5- libtag1v5-vanilla- libtheora0- libtwolame0- libv4l-0- libv4lconvert0- libva-drm2- libva-x11-2- libva2- libvdpau1- libvisual-0.4-0- libvkd3d1- libvorbisenc2- libwavpack1- libwine- libx264-155- libx265-179- libxvidcore4- libzvbi-common- libzvbi0- mesa-va-drivers- mesa-vdpau-drivers- ocl-icd-libopencl1- sane-utils- update-inetd- va-driver-all- vdpau-driver-all-

    - name: Install node-prune
      run: curl -sf https://gobinaries.com/tj/node-prune | sh

    - run: npm install

    - name: Build for Windows
      run: |
        npx electron-forge package --platform win32
        cd out/pakkit-win32-x64/resources/app/; node-prune; npx electron-rebuild -v 8.5.2

    - name: Build for Linux
      run: |
        npx electron-forge package --platform linux
        cd out/pakkit-linux-x64/resources/app/; node-prune; npx electron-rebuild -v 8.5.2;

    - run: chmod +x out/pakkit-linux-x64/pakkit

    - name: Build for macOS
      run: |
        npx electron-forge package --platform darwin
        cd out/pakkit-darwin-x64/pakkit.app/Contents/Resources/app/; node-prune; npx electron-rebuild -v 8.5.2

    - name: Create archives for new release
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        mv out/pakkit-win32-x64 pakkit-windows-x64
        mv out/pakkit-linux-x64 pakkit-linux-x64
        mv out/pakkit-darwin-x64 pakkit-macos-x64
        zip -r -y out/pakkit-windows-x64.zip pakkit-windows-x64/
        zip -r -y out/pakkit-linux-x64.zip pakkit-linux-x64/
        zip -r -y out/pakkit-macos-x64.zip pakkit-macos-x64/

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: github-${{ github.run_number }}
        release_name: GitHub build ${{ github.run_number }}
        body: github-${{ github.run_number }}

    - name: Upload Windows build
      uses: actions/upload-release-asset@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/pakkit-windows-x64.zip
        asset_name: pakkit-windows-x64-v${{ github.run_number }}.zip
        asset_content_type: application/zip

    - name: Upload Linux build
      uses: actions/upload-release-asset@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/pakkit-linux-x64.zip
        asset_name: pakkit-linux-x64-v${{ github.run_number }}.zip
        asset_content_type: application/zip

    - name: Upload macOS build
      uses: actions/upload-release-asset@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/pakkit-macos-x64.zip
        asset_name: pakkit-macos-x64-v${{ github.run_number }}.zip
        asset_content_type: application/zip

    - name: Prepare to upload artifacts
      if: ${{ github.ref != 'refs/heads/master' }}
      run: |
        mkdir out/windows
        mkdir out/linux
        mkdir out/macos
        mv out/pakkit-win32-x64 out/windows/pakkit-windows-x64
        mv out/pakkit-linux-x64 out/linux/pakkit-linux-x64
        mv out/pakkit-darwin-x64 out/macos/pakkit-macos-x64

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v2
      if: ${{ github.ref != 'refs/heads/master' }}
      with:
        name: pakkit-windows-x64
        path: out/windows/

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v2
      if: ${{ github.ref != 'refs/heads/master' }}
      with:
        name: pakkit-linux-x64
        path: out/linux/

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v2
      if: ${{ github.ref != 'refs/heads/master' }}
      with:
        name: pakkit-macos-x64
        path: out/macos/
